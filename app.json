[
  {
    "name": "app.R",
    "content": "# Text Mining Tutorial in R - Base Shiny Version\n# Only uses packages available in Shinylive\n\nlibrary(shiny)\n\n# Simple UI using basic Shiny\nui <- fluidPage(\n  titlePanel(\"Text Mining Tutorial in R\"),\n  \n  navbarPage(\"Tutorial\",\n    \n    # Getting Started Tab\n    tabPanel(\"Getting Started\",\n      fluidRow(\n        column(12,\n          wellPanel(\n            h3(\"Welcome to Text Mining with R!\"),\n            p(\"Text mining is the process of extracting meaningful information from unstructured text data.\"),\n            \n            h4(\"What Can You Do?\"),\n            tags$ul(\n              tags$li(\"Analyze customer feedback\"),\n              tags$li(\"Study social media sentiment\"),\n              tags$li(\"Create word clouds\"),\n              tags$li(\"Find text patterns\")\n            )\n          )\n        )\n      ),\n      \n      fluidRow(\n        column(6,\n          wellPanel(\n            h4(\"Your First Analysis\"),\n            p(\"Let's start by analyzing a simple text:\"),\n            textAreaInput(\"intro_code\", \"R Code:\", \n                         value = \"# Your first text analysis\\ntext <- 'Text mining is fun and useful'\\nwords <- strsplit(text, ' ')[[1]]\\nprint(words)\\nprint(paste('Word count:', length(words)))\",\n                         rows = 6, width = \"100%\"),\n            actionButton(\"run_intro\", \"Run Code\", class = \"btn-primary\"),\n            br(), br(),\n            h5(\"Output:\"),\n            verbatimTextOutput(\"intro_output\")\n          )\n        ),\n        \n        column(6,\n          wellPanel(\n            h4(\"Text Mining Steps\"),\n            tags$ol(\n              tags$li(\"Data Collection\"),\n              tags$li(\"Text Preprocessing\"),\n              tags$li(\"Analysis\"),\n              tags$li(\"Visualization\")\n            )\n          )\n        )\n      )\n    ),\n    \n    # Text Basics Tab\n    tabPanel(\"Text Basics\",\n      fluidRow(\n        column(12,\n          wellPanel(\n            h3(\"Basic Text Operations in R\"),\n            p(\"Learn fundamental text manipulation using base R functions:\")\n          )\n        )\n      ),\n      \n      fluidRow(\n        column(6,\n          wellPanel(\n            h4(\"String Functions\"),\n            tags$pre(\"nchar(text)        # Count characters\\ntoupper(text)      # Convert to uppercase\\ntolower(text)      # Convert to lowercase\\nsubstr(text, 1, 5) # Extract substring\\npaste(a, b)        # Combine strings\")\n          )\n        ),\n        column(6,\n          wellPanel(\n            h4(\"Pattern Matching\"),\n            tags$pre(\"grep('word', text)     # Find pattern\\ngsub('old', 'new', text) # Replace pattern\\ngrepl('word', text)      # Test for pattern\")\n          )\n        )\n      ),\n      \n      fluidRow(\n        column(12,\n          wellPanel(\n            h4(\"Practice Text Operations\"),\n            textAreaInput(\"basics_code\", \"Try it:\",\n                         value = \"# Sample text\\nmy_text <- 'R is great for Data Science!'\\n\\n# Basic operations\\nprint(paste('Original:', my_text))\\nprint(paste('Length:', nchar(my_text)))\\nprint(paste('Lowercase:', tolower(my_text)))\\nprint(paste('First 10 chars:', substr(my_text, 1, 10)))\\n\\n# Count letter 'a'\\na_count <- length(grep('a', strsplit(tolower(my_text), '')[[1]]))\\nprint(paste('Count of a:', a_count))\",\n                         rows = 10, width = \"100%\"),\n            actionButton(\"run_basics\", \"Run Code\", class = \"btn-primary\"),\n            br(), br(),\n            verbatimTextOutput(\"basics_output\")\n          )\n        )\n      )\n    ),\n    \n    # Word Frequency Tab\n    tabPanel(\"Word Frequency\",\n      fluidRow(\n        column(12,\n          wellPanel(\n            h3(\"Word Frequency Analysis\"),\n            p(\"Analyze which words appear most often in your text using base R functions.\")\n          )\n        )\n      ),\n      \n      fluidRow(\n        column(6,\n          wellPanel(\n            h4(\"Frequency Analysis\"),\n            textAreaInput(\"freq_code\", \"Code:\",\n                         value = \"# Sample texts\\ntexts <- c(\\n  'Text mining is useful for data science',\\n  'Data science involves analyzing data',\\n  'Machine learning helps analyze patterns'\\n)\\n\\n# Combine and process\\nall_text <- paste(texts, collapse = ' ')\\ncleaned <- tolower(all_text)\\n# Remove punctuation manually\\ncleaned <- gsub('[^a-zA-Z ]', '', cleaned)\\nwords <- strsplit(cleaned, ' ')[[1]]\\nwords <- words[words != '']\\n\\n# Remove common words\\nstopwords <- c('is', 'for', 'and', 'the', 'a', 'an')\\nwords <- words[!words %in% stopwords]\\n\\n# Count frequencies using table()\\nfreq <- table(words)\\nfreq_sorted <- sort(freq, decreasing = TRUE)\\n\\nprint('Top 5 words:')\\nprint(head(freq_sorted, 5))\",\n                         rows = 15, width = \"100%\"),\n            actionButton(\"run_freq\", \"Run Code\", class = \"btn-primary\")\n          )\n        ),\n        \n        column(6,\n          wellPanel(\n            h4(\"Results\"),\n            verbatimTextOutput(\"freq_output\"),\n            br(),\n            plotOutput(\"freq_plot\", height = \"250px\")\n          )\n        )\n      )\n    ),\n    \n    # Simple Visualization Tab\n    tabPanel(\"Visualization\",\n      fluidRow(\n        column(12,\n          wellPanel(\n            h3(\"Text Visualization\"),\n            p(\"Create simple visualizations of word frequencies using base R plotting.\")\n          )\n        )\n      ),\n      \n      fluidRow(\n        column(6,\n          wellPanel(\n            h4(\"Create Chart\"),\n            textAreaInput(\"vis_text\", \"Enter your text:\",\n                         value = \"data science machine learning artificial intelligence statistics analytics programming R python algorithms models prediction analysis research\",\n                         rows = 4, width = \"100%\"),\n            sliderInput(\"max_words\", \"Max words to show:\", min = 5, max = 15, value = 8),\n            actionButton(\"create_vis\", \"Create Visualization\", class = \"btn-primary\")\n          )\n        ),\n        \n        column(6,\n          wellPanel(\n            h4(\"Word Frequency Chart\"),\n            plotOutput(\"vis_plot\", height = \"400px\")\n          )\n        )\n      )\n    ),\n    \n    # Practice Lab Tab\n    tabPanel(\"Practice Lab\",\n      fluidRow(\n        column(12,\n          wellPanel(\n            h3(\"Practice Lab\"),\n            div(style = \"background-color: #e8f5e8; border-left: 4px solid #4caf50; padding: 15px; margin: 10px 0;\",\n                h4(\"Challenge 1: Text Cleaning\"),\n                p(\"Clean this messy text: 'Hello!!! This is 123 MESSY text with punctuation...'\")\n            ),\n            div(style = \"background-color: #e8f5e8; border-left: 4px solid #4caf50; padding: 15px; margin: 10px 0;\",\n                h4(\"Challenge 2: Word Counting\"),\n                p(\"Count unique words in multiple sentences.\")\n            )\n          )\n        )\n      ),\n      \n      fluidRow(\n        column(6,\n          wellPanel(\n            h4(\"Your Practice Code\"),\n            textAreaInput(\"practice_code\", \"Practice Area:\",\n                         value = \"# Practice here - try the challenges!\\n\\n# Challenge 1: Clean messy text\\nmessy_text <- 'Hello!!! This is 123 MESSY text with punctuation...'\\n\\n# Convert to lowercase\\ncleaned <- tolower(messy_text)\\n# Remove punctuation and numbers\\ncleaned <- gsub('[^a-zA-Z ]', '', cleaned)\\n# Remove extra spaces\\ncleaned <- gsub(' +', ' ', trimws(cleaned))\\n\\nprint(paste('Original:', messy_text))\\nprint(paste('Cleaned:', cleaned))\",\n                         rows = 12, width = \"100%\"),\n            actionButton(\"run_practice\", \"Run Code\", class = \"btn-primary\")\n          )\n        ),\n        \n        column(6,\n          wellPanel(\n            h4(\"Output\"),\n            verbatimTextOutput(\"practice_output\"),\n            br(),\n            h5(\"Base R Functions Reference:\"),\n            tags$ul(\n              tags$li(\"tolower(), toupper() - Case conversion\"),\n              tags$li(\"gsub(), grep() - Pattern matching\"),\n              tags$li(\"strsplit(), paste() - Split and combine\"),\n              tags$li(\"table(), sort() - Frequency counting\"),\n              tags$li(\"trimws() - Remove whitespace\")\n            )\n          )\n        )\n      )\n    )\n  )\n)\n\n# Server logic\nserver <- function(input, output, session) {\n  \n  # Introduction tab\n  observeEvent(input$run_intro, {\n    output$intro_output <- renderText({\n      tryCatch({\n        result <- capture.output({\n          eval(parse(text = input$intro_code))\n        })\n        paste(result, collapse = \"\\n\")\n      }, error = function(e) {\n        paste(\"Error:\", e$message)\n      })\n    })\n  })\n  \n  # Basics tab\n  observeEvent(input$run_basics, {\n    output$basics_output <- renderText({\n      tryCatch({\n        result <- capture.output({\n          eval(parse(text = input$basics_code))\n        })\n        paste(result, collapse = \"\\n\")\n      }, error = function(e) {\n        paste(\"Error:\", e$message)\n      })\n    })\n  })\n  \n  # Frequency tab\n  observeEvent(input$run_freq, {\n    output$freq_output <- renderText({\n      tryCatch({\n        result <- capture.output({\n          eval(parse(text = input$freq_code))\n        })\n        paste(result, collapse = \"\\n\")\n      }, error = function(e) {\n        paste(\"Error:\", e$message)\n      })\n    })\n    \n    # Create frequency plot\n    output$freq_plot <- renderPlot({\n      tryCatch({\n        eval(parse(text = input$freq_code))\n        if (exists(\"freq_sorted\") && length(freq_sorted) > 0) {\n          par(mar = c(8, 4, 2, 1))\n          barplot(head(freq_sorted, 5), \n                 main = \"Top 5 Most Frequent Words\", \n                 col = rainbow(5),\n                 las = 2,\n                 ylab = \"Frequency\")\n        }\n      }, error = function(e) {\n        plot.new()\n        text(0.5, 0.5, paste(\"Error:\", e$message), cex = 1.2, col = \"red\")\n      })\n    })\n  })\n  \n  # Visualization tab\n  observeEvent(input$create_vis, {\n    output$vis_plot <- renderPlot({\n      tryCatch({\n        text_data <- input$vis_text\n        # Clean and split text\n        cleaned <- tolower(text_data)\n        cleaned <- gsub('[^a-zA-Z ]', '', cleaned)\n        words <- strsplit(cleaned, ' ')[[1]]\n        words <- words[words != '' & nchar(words) > 2]\n        \n        # Count frequencies\n        word_freq <- table(words)\n        word_freq <- sort(word_freq, decreasing = TRUE)\n        word_freq <- head(word_freq, input$max_words)\n        \n        if (length(word_freq) > 0) {\n          # Create colorful bar plot\n          par(mar = c(8, 4, 4, 1))\n          colors <- rainbow(length(word_freq))\n          bp <- barplot(word_freq, \n                       main = paste(\"Top\", length(word_freq), \"Words\"),\n                       col = colors,\n                       las = 2,\n                       ylab = \"Frequency\",\n                       ylim = c(0, max(word_freq) * 1.2))\n          \n          # Add value labels on bars\n          text(bp, word_freq + max(word_freq) * 0.02, \n               labels = word_freq, cex = 0.8)\n        } else {\n          plot.new()\n          text(0.5, 0.5, \"No words to display\", cex = 1.5)\n        }\n      }, error = function(e) {\n        plot.new()\n        text(0.5, 0.5, paste(\"Error:\", e$message), cex = 1.2, col = \"red\")\n      })\n    })\n  })\n  \n  # Practice tab\n  observeEvent(input$run_practice, {\n    output$practice_output <- renderText({\n      tryCatch({\n        result <- capture.output({\n          eval(parse(text = input$practice_code))\n        })\n        paste(result, collapse = \"\\n\")\n      }, error = function(e) {\n        paste(\"Error:\", e$message)\n      })\n    })\n  })\n}\n\n# Run the application\nshinyApp(ui = ui, server = server)",
    "type": "text"
  }
]